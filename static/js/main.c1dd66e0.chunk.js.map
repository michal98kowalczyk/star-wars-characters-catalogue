{"version":3,"sources":["components/Film.tsx","components/FilmsList.tsx","components/Character.tsx","components/Finder.tsx","components/CharactersList.tsx","components/Footer.tsx","components/Header.tsx","components/LoaderButton.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Film","title","FilmsList","list","titles","map","index","initialFilmsNames","Character","name","birth_year","gender","films","height","mass","useState","filmsNames","setFilmsNames","isActive","setIsActive","useEffect","getFilmsNames","then","response","a","result","i","length","fetch","status","json","push","person","details","onClick","prev","Finder","setNameForFiltering","setIsFiltered","setName","htmlFor","id","value","onChange","e","currentTarget","type","placeholder","preventDefault","CharactersList","people","isFiltered","nameForFiltering","filter","toLowerCase","match","copyrightIcon","icon","faCopyright","Footer","Header","LoaderButton","click","className","initialArray","sizeOfPeopleArray","App","setPeople","window","addEventListener","handleScroll","getPeople","removeEventListener","prepareUrls","startIndex","offset","urls","count","addPeople","event","document","documentElement","scrollTop","body","scrollHeight","clientHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1dd66e0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ntype FilmProps = {\r\n    title:string,\r\n   \r\n}\r\n\r\nconst Film = ({title}:FilmProps) =>{\r\n\r\n   \r\n\r\n    return <li>{title}</li>\r\n}\r\n\r\nexport default Film;","import React from 'react';\r\nimport Film from './Film';\r\n\r\n\r\ntype FilmsListProps = {\r\n    titles: string[]\r\n    \r\n  }\r\n\r\n\r\nconst FilmsList = ({titles}:FilmsListProps) =>{\r\n\r\n\r\n \r\n\r\n    const list = titles.map((title,index) => (\r\n        <Film\r\n         key={index}\r\n         title={title}\r\n        />)\r\n        );\r\n\r\n    return (<ol> \r\n        {list}\r\n        </ol>)\r\n}\r\n\r\nexport default FilmsList;","import React,{useState,useEffect} from 'react';\r\n\r\nimport FilmsList from './FilmsList';\r\n\r\ntype CharactersProps = {\r\n    name:string,\r\n    birth_year:string,\r\n    gender:string,\r\n    films:string[],\r\n    height:string,\r\n    mass:string,\r\n\r\n\r\n    \r\n  }\r\n\r\nconst initialFilmsNames:Array<string> = [];  \r\n\r\nconst Character = ({name,birth_year,gender,films,height,mass}:CharactersProps) =>{\r\n\r\n    const [filmsNames,setFilmsNames] = useState(initialFilmsNames);\r\n    const [isActive,setIsActive] = useState(false);\r\n\r\n\r\n    useEffect( ()=>{\r\n   \r\n      getFilmsNames().then(response => setFilmsNames([...response]));\r\n    \r\n      },[]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n   \r\n\r\n    const getFilmsNames = async() =>{\r\n\r\n       \r\n        let result:Array<string> = [];\r\n        if(films){\r\n            for(let i=0;i<films.length;i++){\r\n\r\n                const response = await fetch(films[i]);\r\n\r\n                if(response.status===200){\r\n                    const json = await response.json();\r\n                    result.push(json.title);    \r\n                }\r\n                \r\n\r\n        }\r\n        }\r\n    \r\n  \r\n    return result;\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const handeOnClick = ()=>{\r\n        setIsActive(prev=>!prev);\r\n    }\r\n\r\n\r\n\r\n        \r\n\r\n    const person =<> <span>Name:</span> {name}, <span>Birth year:</span> {birth_year}, <span>Gender:</span> {gender}</> ;\r\n \r\n    const details = <>  <span>Height:</span>{height}, <span>Mass:</span> {mass}  <br/>\r\n                    <span>Films:</span> \r\n                    <FilmsList titles={filmsNames}/>\r\n                    </>\r\n\r\n    return (\r\n    <li onClick={handeOnClick}>\r\n        {person}\r\n        {isActive && details}\r\n    </li>)\r\n}\r\n\r\nexport default Character;","import React, {useState} from 'react';\r\n\r\nimport '../styles/Finder.scss';\r\n\r\nconst initialFindingName:string = \"\";\r\n\r\ntype FinderProps = {\r\n    setNameForFiltering:any,\r\n    setIsFiltered:any,\r\n\r\n\r\n}   \r\n\r\n\r\nconst Finder = ({setNameForFiltering,setIsFiltered}:FinderProps) =>{\r\n\r\n    const [name,setName] = useState(initialFindingName);\r\n\r\n    \r\n\r\n\r\n    const handleOnClickReset = (e:React.MouseEvent<HTMLElement>) =>{\r\n        e.preventDefault();   \r\n        setNameForFiltering(initialFindingName);\r\n        setName(initialFindingName);\r\n        setIsFiltered(false);\r\n    }\r\n\r\n    const handleOnClickSearch = (e:React.MouseEvent<HTMLElement>) =>{\r\n        e.preventDefault();\r\n        \r\n\r\n        setNameForFiltering(name);\r\n        setIsFiltered(true);\r\n        \r\n       \r\n    }\r\n\r\n    const handleOnChange = (e:React.FormEvent<HTMLInputElement>) =>setName(e.currentTarget.value);\r\n\r\n\r\n    return (\r\n\r\n        <form >\r\n            <label htmlFor=\"name\">\r\n                <input id=\"name\"  value={name} onChange={handleOnChange} type=\"text\" placeholder=\"Name\"/>\r\n            </label>\r\n\r\n            <button onClick={handleOnClickSearch}>Search</button>\r\n            <button onClick={handleOnClickReset}>Clear</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Finder;","import React, {useState} from 'react';\r\n\r\n\r\nimport Character from './Character';\r\nimport Finder from './Finder';\r\n\r\nimport '../styles/CharactersList.scss';\r\n\r\n\r\ntype CharactersListProps = {\r\n    people: any[]\r\n    \r\n  }\r\n\r\n\r\n\r\nconst CharactersList = ({people}:CharactersListProps) =>{\r\n\r\n    const [isFiltered,setIsFiltered] = useState(false);\r\n    const [nameForFiltering,setNameForFiltering] = useState(\"\");\r\n    \r\n    const filterByName = ():Array<any> =>{\r\n        \r\n        return people.filter(person =>person.name.toLowerCase()\r\n                                    .match(nameForFiltering.toLowerCase()))\r\n    }\r\n\r\n    let list = isFiltered ? filterByName() : people;\r\n\r\n     list = list.map((person,index) => (\r\n        <Character \r\n        key={index} \r\n        name={person.name}\r\n        birth_year={person.birth_year}\r\n        gender={person.gender}\r\n        films={person.films}    \r\n        height={person.height}\r\n        mass={person.mass}\r\n        />\r\n        \r\n        ))\r\n\r\n    return (\r\n        <>\r\n        <Finder setNameForFiltering={setNameForFiltering} setIsFiltered={setIsFiltered}/>\r\n        <main>\r\n        <h2>Characters: </h2>\r\n        <ul> \r\n        {list}\r\n        </ul>\r\n        </main>\r\n        </>)\r\n}\r\n\r\nexport default CharactersList;","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCopyright } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport '../styles/Footer.scss';\r\n\r\nconst copyrightIcon = <FontAwesomeIcon icon={faCopyright} />\r\n\r\nconst Footer = () =>{\r\n\r\n\r\n    return <footer>{copyrightIcon}<span>Michał Kowalczyk</span></footer>\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport '../styles/Header.scss';\r\n\r\nconst Header = () =>{\r\n\r\n\r\n    return <header><h1>Star Wars Characters Catalogue</h1></header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport '../styles/LoaderButton.scss';\r\n\r\ntype LoaderButtonProps={\r\n    click:any,\r\n}\r\n\r\nconst countOfCharactersToLoad:number = 5;\r\n\r\nconst LoaderButton = ({click}:LoaderButtonProps) =>{\r\n\r\n    const handleOnClick = ()=>{\r\n        click(countOfCharactersToLoad);\r\n    }\r\n\r\n    return <button className=\"loader\" onClick={handleOnClick}>Load next {countOfCharactersToLoad} characters</button>\r\n}\r\n\r\nexport default LoaderButton;","import React, {useState,useEffect} from 'react';\n\nimport CharacterList from './CharactersList';\nimport Footer from './Footer';\nimport Header from './Header';\nimport LoaderButton from './LoaderButton';\n\n\nimport '../styles/App.scss';\n\n\nconst baseUrl:string = 'https://swapi.dev/api/';\n\nconst startedCharactersCount:number = 10;\n\n\nconst initialArray:Array<any> = [];\nlet sizeOfPeopleArray=0; //need to fetch correct person using scroll position\n\nfunction App() {\n\n  const [people,setPeople] = useState(initialArray);\n  \n\n  useEffect( ()=>{\n    window.addEventListener('scroll', handleScroll)\n    getPeople(startedCharactersCount).then(response => setPeople(prev => {\n      sizeOfPeopleArray += response.length;\n      return [...prev,...response]\n      \n    }));\n\n    return () => window.removeEventListener('scroll', handleScroll)\n  },[]); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n\n  const prepareUrls = (startIndex:number,offset:number):Array<string> =>{\n\n    const urls:Array<string> = [];\n\n    for(let i=startIndex;i<startIndex+offset;i++){\n      urls.push(`${baseUrl}people/${i+1}/`)\n\n\n    }\n\n\n    return urls;\n  }\n\n\n  const getPeople = async (count:number)=>{\n   \n    const urls:Array<string> = prepareUrls(sizeOfPeopleArray,count);\n    let result:Array<any> = [];\n    for(let i=0;i<urls.length;i++){\n\n      const response = await fetch(urls[i]);\n      if(response.status ===200){\n        const json = await response.json();\n      \n        result.push(json);\n\n      }\n      \n\n    }\n    \n  \n    return result;\n  }\n\n  const addPeople = (count:number) =>{\n    getPeople(count).then(response => setPeople(prev => {\n      sizeOfPeopleArray += response.length;\n      return [...prev,...response]\n    }\n      ));\n\n  }\n\n  const handleScroll = (event:Event) =>{\n     \n    const currentPosition =\n      document.documentElement.scrollTop || document.body.scrollTop\n    \n    const height =\n      document.documentElement.scrollHeight -\n      document.documentElement.clientHeight\n\n\n     \n\n    if(currentPosition+1 >= height)addPeople(5);\n\n      \n  \n  \n  }\n\n\n  return (\n    <div className=\"App\">\n\n    <Header/>\n    <LoaderButton click={addPeople}/>\n   \n    <CharacterList people={people}/>\n    <Footer/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}